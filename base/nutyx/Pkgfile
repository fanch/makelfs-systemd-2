# Description: Base system of NuTyX, contains all folders and startup scripts.
# URL: https://github.com/nutyx
# Maintainer: tnut at nutyx dot org
# Packager: tnut at nutyx dot org

PKGMK_IGNORE_RUNTIMEDEPS=yes

name=nutyx
version=7.10
release=1
scripts=blfs-systemd-units
scriptsversion=20160602
source=(nu http://www.linuxfromscratch.org/blfs/downloads/systemd/blfs-systemd-units-20160602.tar.bz2)
build() {
mkdir $PKG/{dev,proc,sys,run}
mknod -m 600 $PKG/dev/console c 5 1
mknod -m 666 $PKG/dev/null c 1 3

mkdir -pv $PKG/{bin,boot,etc/{opt,sysconfig,systemd/network,udev},home,lib/firmware,mnt,opt}
mkdir -pv $PKG/{media/{floppy,cdrom},sbin,srv,var}
install -dv -m 0750 $PKG/root
install -dv -m 1777 $PKG/tmp $PKG/var/tmp
mkdir -pv $PKG/usr/{,local/}{bin,include,lib,sbin,src}
mkdir -pv $PKG/usr/{,local/}share/{color,dict,doc,info,locale,man}
mkdir -v  $PKG/usr/{,local/}share/{misc,terminfo,zoneinfo}
mkdir -v  $PKG/usr/libexec
mkdir -pv $PKG/usr/{,local/}share/man/man{1..8}

for file in nu
do
	install -m755 $file $PKG/bin/$file
done

install --directory --mode=0755 --owner=root --group=root $PKG/etc/profile.d

mkdir -pv $PKG/usr/ports/{base,cli,gui,personnel}

mkdir $PKG/etc/{default,skel,modprobe.d}

for dir in /usr /usr/local; do
  ln -sv share/{man,doc,info} $PKG/$dir
done
case $(uname -m) in
 x86_64) ln -sv lib $PKG/lib64
         ln -sv lib $PKG/usr/lib64
         ln -sv lib $PKG/usr/local/lib64 ;;
esac

mkdir -v  $PKG/usr/lib/{pkgconfig,systemd}
mkdir -v $PKG/var/{log,mail,spool}
ln -sv /run $PKG/var/run
ln -sv /run/lock $PKG/var/lock
mkdir -pv $PKG/var/{opt,cache,lib/{color,misc,locate,local,systemd}}
mkdir -pv $PKG/var/lib/{machines,systemd/{backlight,catalog,coredump,rfkill}}
touch $PKG/etc/machine-id
touch $PKG/var/lib/systemd/{clock,random-seed}
touch $PKG/var/log/{btmp,lastlog,faillog,wtmp}
chgrp -v utmp $PKG/var/log/lastlog
chmod -v 664  $PKG/var/log/lastlog
chmod -v 600  $PKG/var/log/btmp


cat > $PKG/etc/profile.d/i18n.sh << "EOF"
# Begin /etc/profile.d/i18n.sh
unset LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES \
      LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT LC_IDENTIFICATION

if [ -z "$LANG" ]; then
	if [ -n "$XDG_CONFIG_HOME" ] && [ -r "$XDG_CONFIG_HOME/locale.conf" ]; then
  		. "$XDG_CONFIG_HOME/locale.conf"
	elif [ -n $HOME ] && [ -r $HOME/.config/locale.conf ]; then
  		. "$HOME/.config/locale.conf"
	elif [ -r /etc/locale.conf ]; then
  		. /etc/locale.conf
	fi
fi

export LANG="${LANG:-C}"
[ -n "$LC_CTYPE" ]          && export LC_CTYPE
[ -n "$LC_NUMERIC" ]        && export LC_NUMERIC
[ -n "$LC_TIME" ]           && export LC_TIME
[ -n "$LC_COLLATE" ]        && export LC_COLLATE
[ -n "$LC_MONETARY" ]       && export LC_MONETARY
[ -n "$LC_MESSAGES" ]       && export LC_MESSAGES
[ -n "$LC_PAPER" ]          && export LC_PAPER
[ -n "$LC_NAME" ]           && export LC_NAME
[ -n "$LC_ADDRESS" ]        && export LC_ADDRESS
[ -n "$LC_TELEPHONE" ]      && export LC_TELEPHONE
[ -n "$LC_MEASUREMENT" ]    && export LC_MEASUREMENT
[ -n "$LC_IDENTIFICATION" ] && export LC_IDENTIFICATION

# End /etc/profile.d/i18n.sh
EOF

cat > $PKG/etc/profile.d/extrapaths.sh << "EOF"
if [ -d /usr/local/lib/pkgconfig ] ; then
        pathappend /usr/local/lib/pkgconfig PKG_CONFIG_PATH
fi
if [ -d /usr/local/bin ]; then
        pathprepend /usr/local/bin
fi
if [ -d /usr/local/sbin -a $EUID -eq 0 ]; then
        pathprepend /usr/local/sbin
fi

# Set some defaults before other applications add to these paths.
pathappend /usr/share/man  MANPATH
pathappend /usr/share/info INFOPATH
EOF

cat > $PKG/etc/profile.d/dircolors.sh << "EOF"
# Setup for /bin/ls to support color, the alias is in /etc/bashrc.
# Setup for /bin/ls and /bin/grep to support color, the alias is in /etc/bashrc.
if [ -f "/etc/dircolors" ] ; then
        eval $(dircolors -b /etc/dircolors)
fi

if [ -f "$HOME/.dircolors" ] ; then
        eval $(dircolors -b $HOME/.dircolors)
fi

alias ls='ls --color=auto'
alias grep='grep --color=auto'
EOF

cat > $PKG/etc/profile << "EOF"
# Begin /etc/profile
# Written for Beyond Linux From Scratch
# by James Robertson <jameswrobertson@earthlink.net>
# modifications by Dagmar d'Surreal <rivyqntzne@pbzpnfg.arg>

# System wide environment variables and startup programs.

# System wide aliases and functions should go in /etc/bashrc.  Personal
# environment variables and startup programs should go into
# ~/.bash_profile.  Personal aliases and functions should go into
# ~/.bashrc.

# Functions to help us manage paths.  Second argument is the name of the
# path variable to be modified (default: PATH)
pathremove () {
        local IFS=':'
        local NEWPATH
        local DIR
        local PATHVARIABLE=${2:-PATH}
        for DIR in ${!PATHVARIABLE} ; do
                if [ "$DIR" != "$1" ] ; then
                  NEWPATH=${NEWPATH:+$NEWPATH:}$DIR
                fi
        done
        export $PATHVARIABLE="$NEWPATH"
}

pathprepend () {
        pathremove $1 $2
        local PATHVARIABLE=${2:-PATH}
        export $PATHVARIABLE="$1${!PATHVARIABLE:+:${!PATHVARIABLE}}"
}

pathappend () {
        pathremove $1 $2
        local PATHVARIABLE=${2:-PATH}
        export $PATHVARIABLE="${!PATHVARIABLE:+${!PATHVARIABLE}:}$1"
}

export -f pathremove pathprepend pathappend

# Set the initial path
export PATH=/bin:/usr/bin

if [ $EUID -eq 0 ] ; then
        pathappend /sbin:/usr/sbin
        unset HISTFILE
fi

# Setup some environment variables.
export HISTSIZE=1000
export HISTIGNORE="&:[bf]g:exit"

# Set some defaults for graphical systems
export XDG_DATA_DIRS=/usr/share/
export XDG_CONFIG_DIRS=/etc/xdg/

# Setup a red prompt for root and a green one for users.
NORMAL="\[\e[0m\]"
RED="\[\e[1;31m\]"
GREEN="\[\e[1;32m\]"
if [[ $EUID == 0 ]] ; then
  PS1="$RED\u [ $NORMAL\w$RED ]# $NORMAL"
else
  PS1="$GREEN\u [ $NORMAL\w$GREEN ]\$ $NORMAL"
fi

for script in /etc/profile.d/*.sh ; do
        if [ -r $script ] ; then
                . $script
        fi
done

unset script RED GREEN NORMAL

# End /etc/profile
EOF

cat > $PKG/etc/group << "EOF"
root:x:0:root
bin:x:1:root,bin,daemon
daemon:x:2:root,bin,daemon
sys:x:3:root,bin
adm:x:4:root,daemon
tty:x:5:
disk:x:6:root
lp:x:7:daemon
mem:x:8:
kmem:x:9:
wheel:x:10:root
ftp:x:11:
mail:x:12:
uucp:x:14:
messagebus:x:18:
log:x:19:root
utmp:x:20:
locate:x:21:
rfkill:x:24:
smmsp:x:25:
http:x:33:
games:x:50:
lock:x:54:
uuidd:x:68:
dbus:x:81:
network:x:90:
video:x:91:
audio:x:92:
optical:x:93:
floppy:x:94:
storage:x:95:
scanner:x:96:
input:x:97:
power:x:98:
nobody:x:99:
users:x:100:
systemd-journal:x:110:
systemd-journal-gateway:x:191:
systemd-timesync:x:192:
systemd-network:x:193:
systemd-bus-proxy:x:194:
systemd-resolve:x:195:
EOF

cat > $PKG/etc/gshadow << "EOF"
root:::root
bin:::root,bin,daemon
daemon:::root,bin,daemon
sys:::root,bin
adm:::root,daemon
tty:::
disk:::root
lp:::daemon
mem:::
kmem:::
wheel:::root
ftp:::
mail:::
uucp:::
messagebus:::
log:::root
utmp:x::
locate:::
rfkill:x::
smmsp:::
http:::
games:::
lock:::
uuidd:x::
dbus:x::
network:x::
video:x::
audio:::
optical:::
floppy:x::
storage:x::
scanner:x::
input:x::
power:x::
nobody:::
users:::
systemd-journal:::
systemd-journal-gateway:::
systemd-timesync:::
systemd-network:::
systemd-bus-proxy:::
systemd-resolve:::
EOF

cat > $PKG/etc/passwd << "EOF"
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/dev/null:/bin/false
daemon:x:6:6:Daemon User:/dev/null:/bin/false
messagebus:x:18:18:D-Bus Message Daemon User:/var/run/dbus:/bin/false
sshd:x:50:50:sshd PrivSep:/var/lib/sshd:/bin/false
polkitd:x:27:27:PolicyKit Daemon Owner:/etc/polkit-1:/bin/false
lightdm:x:63:63:Light Display Manager:/var/lib/lightdm:/sbin/nologin
systemd-bus-proxy:x:72:72:systemd Bus Proxy:/:/bin/false
systemd-journal-gateway:x:73:73:systemd Journal Gateway:/:/bin/false
systemd-journal-remote:x:74:74:systemd Journal Remote:/:/bin/false
systemd-journal-upload:x:75:75:systemd Journal Upload:/:/bin/false
systemd-network:x:76:76:systemd Network Management:/:/bin/false
systemd-resolve:x:77:77:systemd Resolver:/:/bin/false
systemd-timesync:x:78:78:systemd Time Synchronization:/:/bin/false
systemd-coredump:x:79:79:systemd Core Dumper:/:/bin/false
nobody:x:99:99:Unprivileged User:/dev/null:/bin/false
EOF

cat > $PKG/etc/shadow << "EOF"
root::14871::::::
bin:x:14871::::::
daemon:x:14871::::::
mail:x:14871::::::
ftp:x:14871::::::
http:x:14871::::::
uuidd:x:14871::::::
dbus:x:14871::::::
nobody:x:14871::::::
systemd-journal-gateway:x:14871::::::
systemd-timesync:x:14871::::::
systemd-network:x:14871::::::
systemd-bus-proxy:x:14871::::::
systemd-resolve:x:14871::::::
EOF

cat > $PKG/etc/crypttab << "EOF"
# crypttab: mappings for encrypted partitions
#
# Each mapped device will be created in /dev/mapper, so your /etc/fstab
# should use the /dev/mapper/<name> paths for encrypted devices.
#
# The KaOS specific syntax has been deprecated, see crypttab(5) for the
# new supported syntax.
#
# NOTE: Do not list your root (/) partition here, it must be set up
#       beforehand by the initramfs (/etc/mkinitcpio.conf).

# <name>       <device>         <password>              <options>
# home         /dev/hda4        /etc/mypassword1
# data1        /dev/hda3        /etc/mypassword2
# data2        /dev/hda5        /etc/cryptfs.key
# swap         /dev/hdx4        /dev/urandom            swap,cipher=aes-cbc-essiv:sha256,size=256
# vol          /dev/hdb7        none
EOF

cat > $PKG/etc/profile.d/xorg.sh << "EOF"
XORG_PREFIX="/usr"
XORG_CONFIG="--prefix=$XORG_PREFIX \
             --sysconfdir=/etc \
             --mandir=$XORG_PREFIX/share/man \
             --localstatedir=/var"
export XORG_PREFIX XORG_CONFIG
EOF

ln -sv /usr/lib/os-release $PKG/etc/os-release

ln -sv /usr/share/zoneinfo/UTC $PKG/etc/localtime

ln -sv /proc/self/mounts $PKG/etc/mtab

cat > $PKG/etc/fstab << "EOF"
# Begin /etc/fstab

# file system  mount-point  type     options             dump  fsck
#                                                              order
# Exemple de montage nfs
# 192.168.254.254:/home/thierry /home/thierry nfs rw,vers=3,_netdev,rsize=8192,wsize=8192 0 0
proc           /proc        proc     nosuid,noexec,nodev 0     0
sysfs          /sys         sysfs    nosuid,noexec,nodev 0     0
devpts         /dev/pts     devpts   gid=5,mode=620      0     0
tmpfs          /tmp         tmpfs    defaults            0     0
devtmpfs       /dev         devtmpfs mode=0755,nosuid    0     0

#/dev/sdaX     swap        swap      pri=1               0     0
#/dev/sdaX     /           btrfs     defaults     		 0    0

EOF

cat > $PKG/etc/hostname << "EOF"
localhost
EOF

cat > $PKG/etc/host.conf << "EOF"
#
# /etc/host.conf
#
order hosts,bind
multi on
# End of file
EOF

cat > $PKG/etc/ld.so.conf << "EOF"
#
# /etc/ld.so.conf
#
include /etc/ld.so.conf.d/*.conf
# End of file
EOF


cat > $PKG/etc/adjtime << "EOF"
0.0 0 0.0
0
LOCAL
EOF

cat > $PKG/etc/locale.sh << "EOF"
#!/bin/sh

unset LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES \
      LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT LC_IDENTIFICATION

if [ ! -r /etc/locale.conf ]; then
  return
fi

. /etc/locale.conf

LANG="${LANG:-C}"
export LANG
[ -n "$LC_CTYPE" ]          && export LC_CTYPE
[ -n "$LC_NUMERIC" ]        && export LC_NUMERIC
[ -n "$LC_TIME" ]           && export LC_TIME
[ -n "$LC_COLLATE" ]        && export LC_COLLATE
[ -n "$LC_MONETARY" ]       && export LC_MONETARY
[ -n "$LC_MESSAGES" ]       && export LC_MESSAGES
[ -n "$LC_PAPER" ]          && export LC_PAPER
[ -n "$LC_NAME" ]           && export LC_NAME
[ -n "$LC_ADDRESS" ]        && export LC_ADDRESS
[ -n "$LC_TELEPHONE" ]      && export LC_TELEPHONE
[ -n "$LC_MEASUREMENT" ]    && export LC_MEASUREMENT
[ -n "$LC_IDENTIFICATION" ] && export LC_IDENTIFICATION

EOF

cat > $PKG/etc/locale.conf << "EOF"
#LANG=cs_CZ.utf8
#LANG=de_DE.utf8
#LANG=en_GB.utf8
#LANG=en_HK.utf8
#LANG=en_PH.utf8
#LANG=en_US.utf8
#LANG=es_MX.utf8
#LANG=fa_IR/utf8 
LANG=fr_FR.utf8
#LANG=it_CH.utf8
#LANG=it_IT.utf8
#LANG=ja_JP.EUC-JP
#LANG=ru_RU/utf8 
#LANG=tr_TR.utf8
#LANG=zh_CN.GB18030
EOF

cat > $PKG/etc/vconsole.conf << "EOF"
KEYMAP=fr
EOF

cat > $PKG/etc/lfs-release << "EOF"
7.10-systemd
EOF

cat > $PKG/etc/hosts << "EOF"
# Begin /etc/hosts

127.0.0.1 localhost.localdomain localhost
127.0.0.1 nutyx

# End /etc/hosts
EOF

cat > $PKG/etc/systemd/network/10-eno1-dhcp.network << "EOF"
[Match]
Name=eno1

[Network]
DHCP=ipv4

[DHCP]
UseDomains=true
EOF


cat > $PKG/etc/systemd/network/10-eno1-static.network << "EOF"
[Match]
Name=eno1

[Network]
Address=192.168.0.2/24
Gateway=192.168.0.1
DNS=192.168.0.1
Domains=
EOF

cat > $PKG/etc/resolv.conf << EOF
# Begin /etc/resolv.conf

domain $DOMAIN_NAME

nameserver 8.8.8.8
nameserver 8.8.4.4

# End /etc/resolv.conf
EOF

cat > $PKG/etc/shells << "EOF"
# Begin /etc/shells

/bin/sh
/bin/bash

# End /etc/shells
EOF

cat > $PKG/etc/profile.d/umask.sh << "EOF"
# By default, the umask should be set.
if [ "$(id -gn)" = "$(id -un)" -a $EUID -gt 99 ] ; then
  umask 002
else
  umask 022
fi
EOF

cat > $PKG/etc/bashrc << "EOF"
# Begin /etc/bashrc
# Written for Beyond Linux From Scratch
# by James Robertson <jameswrobertson@earthlink.net>
# updated by Bruce Dubbs <bdubbs@linuxfromscratch.org>

# System wide aliases and functions.

# System wide environment variables and startup programs should go into
# /etc/profile.  Personal environment variables and startup programs
# should go into ~/.bash_profile.  Personal aliases and functions should
# go into ~/.bashrc

# Provides colored /bin/ls and /bin/grep commands.  Used in conjunction
# with code in /etc/profile.

alias ls='ls --color=auto'
alias grep='grep --color=auto'

# Provides prompt for non-login shells, specifically shells started
# in the X environment. [Review the LFS archive thread titled
# PS1 Environment Variable for a great case study behind this script
# addendum.]

NORMAL="\[\e[0m\]"
RED="\[\e[1;31m\]"
GREEN="\[\e[1;32m\]"
if [[ $EUID == 0 ]] ; then
  PS1="$RED\u [ $NORMAL\w$RED ]# $NORMAL"
else
  PS1="$GREEN\u [ $NORMAL\w$GREEN ]\$ $NORMAL"
fi

unset RED GREEN NORMAL

# End /etc/bashrc
EOF

cat > $PKG/etc/profile.d/readline.sh << "EOF"
# Setup the INPUTRC environment variable.
if [ -z "$INPUTRC" -a ! -f "$HOME/.inputrc" ] ; then
        INPUTRC=/etc/inputrc
fi
export INPUTRC
EOF

cat > $PKG/etc/inputrc << "EOF"
# Begin /etc/inputrc
# Modified by Chris Lynn <roryo@roryo.dynup.net>

# Allow the command prompt to wrap to the next line
set horizontal-scroll-mode Off

# Enable 8bit input
set meta-flag On
set input-meta On

# Turns off 8th bit stripping
set convert-meta Off

# Keep the 8th bit for display
set output-meta On

# none, visible or audible
set bell-style none

# All of the following map the escape sequence of the value
# contained in the 1st argument to the readline specific functions
"\eOd": backward-word
"\eOc": forward-word

# for linux console
"\e[1~": beginning-of-line
"\e[4~": end-of-line
"\e[5~": beginning-of-history
"\e[6~": end-of-history
"\e[3~": delete-char
"\e[2~": quoted-insert

# for xterm
"\eOH": beginning-of-line
"\eOF": end-of-line

# for Konsole
"\e[H": beginning-of-line
"\e[F": end-of-line

# End /etc/inputrc
EOF

cat > $PKG/usr/bin/which << "EOF"
#!/bin/bash
type -pa "$@" | head -n 1 ; exit ${PIPESTATUS[0]}
EOF
chmod -v 755 $PKG/usr/bin/which
chown -v root:root $PKG/usr/bin/which
	
cat > $PKG/etc/skel/.bashrc << "EOF"
# Begin ~/.bashrc
# Written for Beyond Linux From Scratch
# by James Robertson <jameswrobertson@earthlink.net>

# Personal aliases and functions.

# Personal environment variables and startup programs should go in
# ~/.bash_profile.  System wide environment variables and startup
# programs are in /etc/profile.  System wide aliases and functions are
# in /etc/bashrc.

if [ -f "/etc/bashrc" ] ; then
  source /etc/bashrc
fi
if [ $EUID -eq 0 ] ; then
	alias del='pkg-get remove'
	alias get='pkg-get depinst'
	alias up='pkg-get update -r'
	alias check='pkg-get sync;pkg-get diff'
else
	alias del='sudo pkg-get remove'
	alias get='sudo pkg-get depinst'
	alias up='sudo pkg-get update -r'
	alias check='sudo pkg-get sync;sudo pkg-get diff'
fi
alias ll='ls -l'
alias l='ls -alh'
alias duh='du -h --max-depth=1'
alias dfh='df -h'
alias pkgfind='pkginfo -i | grep -i'
alias search='pkg-get dsearch'
# End ~/.bashrc
EOF

cat > $PKG/etc/skel/.bash_profile << "EOF"
# Begin ~/.bash_profile
# Written for Beyond Linux From Scratch
# by James Robertson <jameswrobertson@earthlink.net>
# updated by Bruce Dubbs <bdubbs@linuxfromscratch.org>

# Personal environment variables and startup programs.

# Personal aliases and functions should go in ~/.bashrc.  System wide
# environment variables and startup programs are in /etc/profile.
# System wide aliases and functions are in /etc/bashrc.

if [ -f "$HOME/.bashrc" ] ; then
  source $HOME/.bashrc
fi

if [ -d "$HOME/bin" ] ; then
  pathprepend $HOME/bin
fi

# Having . in the PATH is dangerous
#if [ $EUID -gt 99 ]; then
#  pathappend .
#fi

# End ~/.bash_profile
EOF

cat > $PKG/etc/skel/.dmrc << "EOF"
[Desktop]
Session=LXDE
EOF

cat > $PKG/etc/skel/.bash_logout << "EOF"
# Begin ~/.bash_logout
# Written for Beyond Linux From Scratch
# by James Robertson <jameswrobertson@earthlink.net>

# Personal items to perform on logout.

# End ~/.bash_logout
EOF

install -m600 $PKG/etc/skel/.bashrc $PKG/root/.bashrc
install -m600 $PKG/etc/skel/.bash_profile $PKG/root/.bash_profile

cat > $PKG/etc/modprobe.d/usb.conf << "EOF"
# Begin /etc/modprobe.d/usb.conf
install ohci_hcd /sbin/modprobe ehci_hcd ; /sbin/modprobe -i ohci_hcd ; true
install uhci_hcd /sbin/modprobe ehci_hcd ; /sbin/modprobe -i uhci_hcd ; true
# End /etc/modprobe.d/usb.conf
EOF


cat > $PKG/sbin/flushmen << "EOF"
echo "Syncro DD"
sync
echo "Patientez svp ..."
sleep 3
echo "Vider la mémoire"
echo 3 > /proc/sys/vm/drop_caches
EOF

cat > $PKG/etc/blfs-systemd-units << "EOF"
scripts=blfs-systemd-units
EOF
echo "scriptsversion=$scriptsversion" >> $PKG/etc/blfs-systemd-units

mkdir -pv $PKG/etc/systemd/system/getty@tty1.service.d

cat > $PKG/etc/systemd/system/getty@tty1.service.d/noclear.conf << EOF
[Service]
TTYVTDisallocate=no
EOF


mkdir -pv $PKG/etc/systemd/system/foobar.service.d

cat > $PKG/etc/systemd/system/foobar.service.d/foobar.conf << EOF
[Service]
Restart=always
RestartSec=30
EOF

mkdir -pv $PKG/srv/NuTyX/release

# X11 bug
mkdir -p $PKG/etc/X11/xorg.conf.d
ln -sv /usr/share/X11/xorg.conf.d/50-synaptics.conf $PKG/etc/X11/xorg.conf.d/50-synaptics.conf
cat > $PKG/etc/X11/xorg.conf.d/15.quirks.conf << "EOF"
Section "InputClass"
        Identifier "no need Accelerometer in X"
        MatchProduct "Accelerometer"
        Option "Ignore" "on"
EndSection
Section "InputClass"
        Identifier "no need accelerometer in X"
        MatchProduct "accelerometer"
        Option "Ignore" "on"
EndSection
EOF

cat > $PKG/etc/X11/xorg.conf.d/00-keyboard.conf << "EOF"
# Read and parsed by systemd-localed. It's probably wise not to edit this file
# manually too freely.
Section "InputClass"
        Identifier "system-keyboard"
        MatchIsKeyboard "on"
        Option "XkbLayout" "fr"
EndSection
EOF

# Usefull links
cd $PKG/root/
ln -s ../etc/fstab
ln -s ../boot/grub/grub.cfg
ln -s ../etc/profile.d
ln -s ../etc/modprobe.d
ln -s ../etc/systemd
ln -s ../etc/bashrc
ln -s ../etc/prt-get.conf
ln -s ../etc/pkgadd.conf
ln -s ../etc/pkgmk.conf
cd -
}
